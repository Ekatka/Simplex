import numpy as np
# Training parameters
M =10
N = 10
EPSILON = 0.1
TIMESTEPS = 300_000
MIN_VAL = -1
MAX_VAL = 1
BASE_MATRIX = np.array([
    [0.710, -0.357, -0.484, 0.722, -0.108, -0.609, -0.808, -0.222, 0.429, 0.688],
    [-0.600, 0.949, 0.658, 0.568, 0.137, -0.838, -0.814, -0.464, -0.253, 0.531],
    [-0.089, -0.321, 0.074, -0.578, -0.510, 0.174, 0.880, 0.284, -0.930, 0.017],
    [-0.306, -0.135, -0.587, -0.220, 0.312, -0.456, 0.828, 0.892, -0.719, -0.179],
    [0.096, -0.742, -0.862, -0.460, 0.520, 0.919, -0.573, 0.158, 0.944, 0.273],
    [0.829, 0.102, -0.260, -0.796, 0.946, 0.973, -0.541, 0.733, 0.561, 0.824],
    [-0.488, -0.165, -0.354, 0.087, 0.974, -0.602, 0.420, 0.927, -0.111, -0.326],
    [-0.186, -0.026, 0.677, 0.563, 0.336, -0.052, 0.041, 0.686, -0.760, -0.588],
    [0.901, -0.571, -0.839, 0.854, -0.946, -0.512, 0.093, -0.250, -0.007, 0.919],
    [-0.382, 0.109, 0.990, 0.048, 0.069, 0.735, 0.374, 0.705, 0.502, -0.995]
])
    
# Training settings
N_ENVS = 4
# Model save path template
MODEL_NAME_TEMPLATE = "ppo_simplex_random_{steps}_matrix{m}x{n}_min{min}_max{max}_epsilon{eps}.zip"

# Max BFS depth
BFS_DEPTH = 10

# Action to pivot name map
PIVOT_MAP = {
    0: 'bland',
    1: 'largest_coefficient',
    2: 'largest_increase',
    3: 'steepest_edge'
}

